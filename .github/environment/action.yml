name: Environment Variable Identification
description: "Deploy's code to destination env."
on:
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      env:
        description: "Environment to deploy"
        value: ${{ jobs.reusable.outputs.env }}
      branch:
        description: "The branch from which is deployed"
        value: ${{ jobs.reusable.outputs.brachref }}

jobs:
  reusable:
    name: Generate output
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      env: ${{ steps.set-environment.outputs.environment }}
      branchref: ${{ steps.set-ref.outputs.branchref }}
    steps:
        - name: Set Reference
          id: set-ref
          shell: bash
          run: |
            echo "GIT_BRANCH=${GITHUB_REF##*/}"  >> $GITHUB_OUTPUT
            if [ ${{ github.event_name }} == "push" ]; then 
              echo "dryrun on ${{ github.event_name }}......"
              echo "branchref=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"
            elif [ ${{ github.event_name }} == "pull_request" ]; then
              echo "dryrun on ${{ github.event_name }}......"
              echo "branchref=${GITHUB_BASE_REF}" >> "$GITHUB_OUTPUT"
            else 
              echo "dryrun on ${{ github.event_name }}......"
              echo "branchref=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"
            fi
  
        - name: Set Environment
          id: set-environment
          shell: bash
          run: |
            if [ "${{ steps.set-ref.outputs.branchref }}" == "main" ]; then
              echo "environment=prod" >> "$GITHUB_OUTPUT"
            elif [ "${{ steps.set-ref.outputs.branchref }}" == "dev" ]; then
              echo "environment=dev" >> "$GITHUB_OUTPUT"
            else 
              echo "environment=dev" >> "$GITHUB_OUTPUT"
            fi
