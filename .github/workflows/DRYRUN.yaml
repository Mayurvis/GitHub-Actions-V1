name: dry-run
'on':
  push:
  pull_request:
    branches:
      - master
      - dev

permissions:
  id-token: write
  contents: read

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.set-environment.outputs.environment }}
    steps:
      - name: Checkout Repository
        id: checkout-repo
        uses: actions/checkout@master

      - name: Set Reference
        id: set-ref
        run: |
          echo "GIT_BRANCH=${GITHUB_REF##*/}"  >> $GITHUB_OUTPUT
          if [ ${{ github.event_name }} == "push" ]; then 
            echo "dryrun on ${{ github.event_name }}......"
            echo "branchref=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"
          elif [ ${{ github.event_name }} == "pull_request" ]; then
            echo "dryrun on ${{ github.event_name }}......"
            echo "branchref=${GITHUB_BASE_REF}" >> "$GITHUB_OUTPUT"
          else 
            echo "dryrun on ${{ github.event_name }}......"
            echo "branchref=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"
          fi

      - name: Set Environment
        id: set-environment
        run: |
          if [ "${{ steps.set-ref.outputs.branchref }}" == "main" ]; then
            echo "environment=prod" >> "$GITHUB_OUTPUT"
          elif [ "${{ steps.set-ref.outputs.branchref }}" == "dev" ]; then
            echo "environment=dev" >> "$GITHUB_OUTPUT"
          else 
            echo "environment=dev" >> "$GITHUB_OUTPUT"
          fi
          
      - name: Selected env
        id: selected-env
        run: |
          echo "branchref=${{ steps.set-ref.outputs.branchref }}"
          echo "environment=${{ steps.set-environment.outputs.environment }}"
        
  sre-portal-infra-dryru:
    name: sre-portal-infra dryrun
    runs-on: ubuntu-latest
    needs: set-env
    environment: ${{needs.set-env.outputs.env}}
    steps:
      - name: Checkout Repository
        id: checkout-repo
        uses: actions/checkout@master

      - name: Configure AWS Credentials
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.SRE_PORTAL_DEPLOYMENT_ROLE }}

      - name: Get text file from S3
        id: get-version
        run: |
          aws s3 cp s3://sre-sreportal-backend-$environment/version.txt version.txt
        continue-on-error: false

      - name: Setpup Terraform
        id: setup-terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.3

      - name: Terraform Init
        id: initialise-terraform
        run: terraform init -backend-config="backends/$environment.s3.tfbackend"
        continue-on-error: false

      - name: Terraform Format
        id: indenting-terraform
        run: terraform fmt
        continue-on-error: false

      - name: Terraform Validate
        id: syntax-check
        run: terraform validate
        continue-on-error: false

      - name: Terraform List
        id: resource-list
        run: terraform state list
        continue-on-error: false

      - name: Terraform Plan
        id: terraform-plan
        run: |
          terraform plan -var-file=variables/variable-$environment.tfvars -no-color
        continue-on-error: false
